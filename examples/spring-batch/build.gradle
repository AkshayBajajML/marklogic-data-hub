plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'net.saliman.properties' version '1.4.6'
    id 'com.marklogic.ml-data-hub' version '2.0.0-rc.1'
}

repositories {
    mavenLocal()
    jcenter()
    maven {url 'http://developer.marklogic.com/maven2/'}
}

dependencies {
    compile 'com.marklogic:marklogic-data-hub:2.0.0-rc.1'
    compile "com.marklogic:marklogic-spring-batch-core:1.0.1"

    testCompile "com.h2database:h2:1.4.193"
    testCompile "com.marklogic:marklogic-spring-batch-test:1.0.1"

    runtime "com.h2database:h2:1.4.193"
}

mainClassName = "com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner"

task importMonsters(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.marklogic.spring.batch.core.launch.support.CommandLineJobRunner"
    args = [
            "--jobPath", "com",
            "--project_dir", ".",
            "--env", "local",
            "--input_file_path", "./input",
            "--input_file_pattern", ".*\\.xml",
            "--entity_name", "Monster",
            "--flow_name", "ingest-monster",
            "--chunk", "100"
    ]
}

// This task is for running the examples
task runH2DataManager(type: JavaExec) {
    classpath = configurations.runtime
    main = "org.h2.tools.Console"
    args = [
        "-url", "jdbc:h2:file:./input/sample",
        "-user", "sa"
    ]
}

task loadH2Data(type: JavaExec) {
    classpath = configurations.runtime
    main = "org.h2.tools.RunScript"
    args = [
        "-url", "jdbc:h2:file:./input/sample",
        "-user", "sa",
        "-script", "./src/test/resources/db/sampledata.sql"
    ]
}
