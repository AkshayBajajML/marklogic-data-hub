buildscript {
    ext {
        springBootVersion = '1.3.6.RELEASE'
    }
    repositories {
        jcenter()
        maven {url 'http://developer.marklogic.com/maven2/'}
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE')
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'com.eriwen.gradle.js' version '1.12.1'
}

apply plugin: 'spring-boot'
// apply plugin: 'war'

repositories {
    jcenter()
    maven {url 'http://developer.marklogic.com/maven2/'}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    compile("org.aspectj:aspectjweaver:1.8.9")
    compile("org.springframework:spring-messaging")
    compile project(":marklogic-data-hub")
    compile("org.apache.commons:commons-csv:1.4")

    // Optional Boot library - see https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
    compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")

    // Needed for the Upload feature using mlcp
    compile("com.marklogic:mlcp-util:0.2.0")
    testCompile("junit:junit")
    testCompile("org.springframework:spring-test")
}

task npmInstallUI(type:Exec) {
    workingDir '.'
    commandLine 'npm', 'install'
}

task buildUI(type:Exec) {
    workingDir '.'
    commandLine 'npm', 'run', 'build:prod'
    dependsOn tasks.npmInstallUI
}

task watchUI(type:Exec) {
    workingDir '.'
    commandLine 'npm', 'run', 'watch'
    dependsOn tasks.npmInstallUI
}

build.dependsOn buildUI

bootRun {
    addResources = true
    environment 'spring.profiles.active', 'dev'
}

springBoot {
    executable = true
    mainClass = "com.marklogic.quickstart.Application"
}

// war {
//     baseName = 'quick-start'
// }
