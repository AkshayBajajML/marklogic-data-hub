plugins {
    id 'net.saliman.properties' version '1.4.4'
    id 'com.marklogic.ml-gradle' version '2.0rc5'
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}

repositories {
    jcenter()
    maven {url 'http://developer.marklogic.com/maven2/'}
}

version = '0.0.9'
group   = 'com.marklogic'

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
    compile 'com.marklogic:marklogic-xcc:8.0.4'
    compile 'com.marklogic:java-client-api:3.0.3'
    compile mlAppDeployerDependency
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.3'
    compile 'commons-io:commons-io:2.4'
    testCompile 'junit:junit:4.12'
    testCompile 'xmlunit:xmlunit:1.3'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
   options.overview = "src/main/resources/overview.html"
}

Node pomCustomizations = new NodeBuilder(). project {
        name 'hub-in-a-box'
        packaging 'jar'
        textdescription 'Library for Creating an Enterprise Data Hub on MarkLogic'
        url 'https://github.com/marklogic/hub-in-a-box'

        scm {
            url 'git@github.com:marklogic/hub-in-a-box.git'
                connection 'scm:git@github.com:marklogic/hub-in-a-box.git'
                developerConnection 'scm:git@github.com:marklogic/hub-in-a-box.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                name 'MarkLogic'
                    email 'java-sig@marklogic.com'
                    organization 'MarkLogic'
                    organizationUrl 'https://www.marklogic.com'
            }
            developer {
                name 'MarkLogic Github Contributors'
                    email 'general@developer.marklogic.com'
                    organization 'Github Contributors'
                    organizationUrl 'https://github.com/marklogic/hub-in-a-box/graphs/contributors'
            }
        }
}

publishing {
  publications {
    mainJava(MavenPublication) {
      from components.java

      pom.withXml {
        asNode().append(pomCustomizations.developers)
        asNode().append(pomCustomizations.name)
        asNode().append(pomCustomizations.packaging)
        asNode().append(pomCustomizations.url)
        asNode().append(pomCustomizations.scm)
        asNode().append(pomCustomizations.licenses)
        asNode().appendNode("description", pomCustomizations.textdescription.text)
      }

      artifact sourcesJar

      artifact javadocJar

    }
  }
  repositories {
    maven {
      url publishUrl
    }
  }
}

ext {
    mlAppConfig {
        modulePaths.add("data-hub/src/hub-in-a-box")
        contentXccUrl = "xcc://${mlUsername}:${mlPassword}@${mlHost}:${mlRestPort}/${mlAppConfig.contentDatabaseName}"
    }
}

task generateRewriter(type: com.marklogic.gradle.task.XccTask) {
    String custom = new File("$projectDir/src/hub-in-a-box/rewriter.xml").getText('UTF-8')
    String xqueryToRun = new File("$projectDir/src/hub-in-a-box/build-rewriter.xqy").getText('UTF-8')
    xqueryToRun = xqueryToRun.replace('__CUSTOM_REWRITER__', custom)
    xccUrl = contentXccUrl
    xquery = xqueryToRun
}

mlPostDeploy.dependsOn generateRewriter
